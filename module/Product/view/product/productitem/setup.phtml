<?php
$this->headLink()
    ->appendStylesheet('/assets/bootstrap-toggle-buttons/static/stylesheets/bootstrap-toggle-buttons.css')
    ->appendStylesheet('/assets/data-tables/DT_bootstrap.css')
    ->appendStylesheet('/assets/uniform/css/uniform.default.css');

$this->inlineScript()
    ->appendFile('/assets/bootstrap-toggle-buttons/static/js/jquery.toggle.buttons.js')
    ->appendFile('/assets/data-tables/jquery.dataTables.js')
    ->appendFile('/assets/data-tables/DT_bootstrap.js')
    ->appendFile('/js/forms/product/setup.js');


$this->inlineScript()->captureStart();
echo <<<JS
    $(function() {
        var priceTable = $('#pricing_tbl').dataTable({
            sDom: "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>",
            oLanguage: {
                sLengthMenu: "_MENU_ records per page",
                oPaginate: {
                    sPrevious: "Prev",
                    sNext: "Next"
                }
            },
            bPaginate: false,
            bFilter: false,
            bProcessing: false,
            bServerSide: true,
            aoColumns: [
                { 'bSortable': false },
                { 'bSortable': false },
                { 'bSortable': false },
                { 'bSortable': false },
                { 'bSortable': false }
            ],
            sAjaxSource: "/product-{$product->getProductId()}/listpricing/"
        });    

        function setupPricingForm(pricingId, cpu, ppu, min, max) {
            $('#PricingForm input[name=pricingId]').val(pricingId);
            $('#PricingForm input[name=cpu]').val(cpu);
            $('#PricingForm input[name=ppu]').val(ppu);
            $('#PricingForm input[name=min]').val(min);
            $('#PricingForm input[name=max]').val(max);
        }
            
        $(document).on('click', '.delete-pricepoint', function(e) {
            e.preventDefault();
            $('#PricingDeleteForm input[name=pricingId]').val($(this).attr('data-pricingId'));
            $('#modalDeletePP').modal({});
        });
            
        $('#btn-pp-confirm-delete').on('click', function(e) {
            e.preventDefault();
            $('#PricingDeleteForm').submit();
            return false;
        });

        $('#PricingDeleteForm').on('submit', function(e) {
            e.preventDefault();
            e.stopPropagation();

            try {
                resetFormErrors($(this).attr('name'));
                $('#productDeleteMsgs').empty();
                var url = $(this).attr('action');
                var params = 'ts='+Math.round(new Date().getTime()/1000)+'&'+$(this).serialize();
                $('#ppDeleteLoader').fadeIn(function(){
                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: params, // Just send the Base64 content in POST body
                        processData: false, // No need to process
                        timeout: 60000, // 1 min timeout
                        dataType: 'text', // Pure Base64 char data
                        beforeSend: function onBeforeSend(xhr, settings) {},
                        error: function onError(XMLHttpRequest, textStatus, errorThrown) {},
                        success: function onUploadComplete(response) {
                            //console.log(response); //return;
                            try{
                                var obj=jQuery.parseJSON(response);
                                var k = 0;
                                // an error has been detected
                                var additional='';
                                if (obj.err == true) {
                                    if (obj.info != undefined) {
                                        for(var i in obj.info){
                                            if (!addFormError(i, obj.info[i])) {
                                                additional+=obj.info[i]+'<br />';
                                            }

                                        }

                                        if (additional != '') {
                                            msgAlert('productDeleteMsgs',{
                                                mode: 3,
                                                body: 'Error: '+additional,
                                                empty: true
                                            });
                                        }
                                    }

                                } else{ // no errors
                                    growl('Success!', 'The pricing policy has been successfully removed.', {time: 3000});
                                    $('#modalDeletePP').modal('hide');
                                    priceTable.fnDraw();

                                }
                            }
                            catch(error){
                                $('#errors').html($('#errors').html()+error+'<br />');
                            }
                        },
                        complete: function(jqXHR, textStatus){
                            $('#ppDeleteLoader').fadeOut(function(){});
                        }
                    });
                });

            } catch (ex) {

            }/**/
            return false;
        });
            
        $(document).on('click', '.edit-pricepoint', function(e) {
            e.preventDefault();
            setupPricingForm($(this).attr('data-pricingId'), $(this).attr('data-cpu'), $(this).attr('data-ppu'), $(this).attr('data-min'), $(this).attr('data-max'));
            $('#modalSavePP').modal({});
        });
            
        $('#add-pricepoint').on('click', function(e) {
            e.preventDefault();
            setupPricingForm('', $('#ProductConfigForm input[name=cpu]').val(), $('#ProductConfigForm input[name=ppu]').val(), 0, 0);
            $('#modalSavePP').modal({});
        });

        $('#btn-pp-confirm-save').on('click', function(e) {
            e.preventDefault();
            $('#PricingForm').submit();
            return false;
        });

        $('#PricingForm').on('submit', function(e) {
            e.preventDefault();
            e.stopPropagation();
            try {
                resetFormErrors($(this).attr('name'));
                $('#productSaveMsgs').empty();
                var url = $(this).attr('action');
                var params = 'ts='+Math.round(new Date().getTime()/1000)+'&'+$(this).serialize();
                $('#ppSaveLoader').fadeIn(function(){
                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: params, // Just send the Base64 content in POST body
                        processData: false, // No need to process
                        timeout: 60000, // 1 min timeout
                        dataType: 'text', // Pure Base64 char data
                        beforeSend: function onBeforeSend(xhr, settings) {},
                        error: function onError(XMLHttpRequest, textStatus, errorThrown) {},
                        success: function onUploadComplete(response) {
                            //console.log(response); //return;
                            try{
                                var obj=jQuery.parseJSON(response);
                                var k = 0;
                                // an error has been detected
                                var additional='';
                                if (obj.err == true) {
                                    if (obj.info != undefined) {
                                        for(var i in obj.info){
                                            if (!addFormError(i, obj.info[i])) {
                                                additional+=obj.info[i]+'<br />';
                                            }

                                        }

                                        if (additional != '') {
                                            msgAlert('productSaveMsgs',{
                                                mode: 3,
                                                body: 'Error: '+additional,
                                                empty: true
                                            });
                                        }
                                    }

                                } else{ // no errors
                                    growl('Success!', 'The pricing policy has been successfully updated.', {time: 3000});
                                    $('#modalSavePP').modal('hide');
                                    priceTable.fnDraw();

                                }
                            }
                            catch(error){
                                $('#errors').html($('#errors').html()+error+'<br />');
                            }
                        },
                        complete: function(jqXHR, textStatus){
                            $('#ppSaveLoader').fadeOut(function(){});
                        }
                    });
                });

            } catch (ex) {

            }/**/
            return false;
        });
    });

            
JS;
$this->inlineScript()->captureEnd();

?><div class="row-fluid">
    <div class="span12">
    <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget blue">
            <div class="widget-title">
                <h4><i class="icon-cog"></i> Product Setup</h4>
                    <span class="tools">
                        <a href="javascript:;" class="icon-chevron-down"></a>
                    </span>
            </div>
            <div class="widget-body relative">
                <div id="productAddLoader" class="loader"></div>
                <?php echo $this->form()->openTag($form); ?>
                <div class="control-group">
                    <label class="control-label">Brand</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('brand'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Supplier</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('supplier'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Build</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('build'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Type</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('type'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Model</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('model'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Description</label>
                    <div class="controls">
                        <?php echo $this->formElement($form->get('description'));  ?>
                    </div>
                </div> 
                <div class="control-group">
                    <label class="control-label">Cost</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('cpu'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Price</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('ppu'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">IBP</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('ibppu'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Trial Price</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('ppuTrial'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Install PPU</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('instPpu'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Install Premium PPU</label>
                    <div class="controls">
                        <div class="input-prepend input-append">
                            <span class="add-on">&#163;</span>
                            <?php echo $this->formElement($form->get('instPremPpu'));  ?>
                            <span class="add-on">per unit</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Power</label>
                    <div class="controls">
                        <div class="input-append">
                            <?php echo $this->formElement($form->get('pwr'));  ?>
                            <span class="add-on">watts</span>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Active</label>
                    <div class="controls">
                        <div id="active-toggle-button">
                            <?php echo $this->formElement($form->get('active'));  ?>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">ECA Compatible</label>
                    <div class="controls">
                        <div id="eca-toggle-button">
                            <?php echo $this->formElement($form->get('eca'));  ?>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">MCD Compatible</label>
                    <div class="controls">
                        <div id="mcd-toggle-button">
                            <?php echo $this->formElement($form->get('mcd'));  ?>
                        </div>
                    </div>
                </div>
                <div id="productMsgs"></div>
                <?php echo $this->form()->closeTag($form); ?>
                <div class="clearfix">
                    <div class="btn-group pull-right">
                    <?php if ($this->isGranted('product.write')) { ?>
                        <button id="btn-product-modify" class="btn btn-success">
                            <i class="icon-ok"></i>&nbsp;Save Changes
                        </button>
                    <?php } ?>    
                    </div>
                </div>
            </div>
        </div>
    <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget purple">
            <div class="widget-title">
                <h4><i class="icon-reorder"></i> Editable Table</h4>
               <span class="tools">
                   <a href="javascript:;" class="icon-chevron-down"></a>
                   <a href="javascript:;" class="icon-remove"></a>
               </span>
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        <div class="btn-group">
                            <button id="add-pricepoint" class="btn green">
                                Add Price Point <i class="icon-plus"></i>
                            </button>
                        </div>
                    </div>  
                    <table class="table table-striped table-bordered table-hover" id="pricing_tbl">
                        <thead>
                        <tr>
                            <th>Min</th>
                            <th>Max</th>
                            <th>CPU</th>
                            <th>PPU</th>
                            <th style="width: 80px">&nbsp;</th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<div id="modalDeletePP" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel3">Delete Confirmation&nbsp;</h3>
    </div>
    <div class="modal-body">
        <div id="ppDeleteLoader" class="loader"></div>
        <form id="PricingDeleteForm" action="<?php echo '/product-'.$product->getProductId().'/deletepricing/'; ?>">
            <input type="hidden" name="pricingId" value="" />
        <p>
            Are you sure that you would like to delete the selected system item?<br /><br />
            Please note: a deleted item cannot be retrieved.
        </p>
        </form>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><i class="icon-remove"></i> Cancel</button>
        <button class="btn btn-danger" id="btn-pp-confirm-delete" aria-hidden="true"><i class="icon-ok"></i> Confirm</button>
    </div>
</div>
<div id="modalSavePP" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel3">Price Point Save&nbsp;</h3>
    </div>
    <div class="modal-body">
            <div id="ppSaveLoader" class="loader"></div>
        <p>
            Enter the details of the new price-point below and click on confirm to add to product.<br />
        </p>
        <?php echo $this->form()->openTag($formPricing); ?>
        <input type="hidden" name="pricingId" value="" />
            <div class="control-group">
                <label class="control-label">CPU</label>
                <div class="controls">
                    <div class="input-append input-prepend">
                        <span class="add-on">&#163;</span>
                        <?php echo $this->formElement($formPricing->get('cpu'));  ?>
                        <span class="add-on">per unit</span>
                    </div>
                </div>
            </div> 
            <div class="control-group">
                <label class="control-label">PPU</label>
                <div class="controls">
                    <div class="input-append input-prepend">
                        <span class="add-on">&#163;</span>
                        <?php echo $this->formElement($formPricing->get('ppu'));  ?>
                        <span class="add-on">per unit</span>
                    </div>
                </div>
            </div> 
            <div class="control-group">
                <label class="control-label">Min</label>
                <div class="controls">
                    <?php echo $this->formElement($formPricing->get('min'));  ?>
                </div>
            </div> 
            <div class="control-group">
                <label class="control-label">Max</label>
                <div class="controls">
                    <?php echo $this->formElement($formPricing->get('max'));  ?>
                </div>
            </div> 
        <?php echo $this->form()->openTag($formPricing); ?>
        <div id="productSaveMsgs"></div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><i class="icon-remove"></i> Cancel</button>
        <button class="btn btn-success" id="btn-pp-confirm-save" aria-hidden="true"><i class="icon-ok"></i> Confirm</button>
    </div>
</div>